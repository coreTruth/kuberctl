# Configuration where an ELB fronts the master (apiservers in particular)

# Master ELB
loadBalancer/api.{{ ClusterName }}:
  id: master-{{ replace .ClusterName "." "-" }}
  securityGroups:
    - securityGroup/api.{{ ClusterName }}
  subnets:
{{ range $zone := .MasterZones }}
    - subnet/{{ $zone }}-{{ ClusterName }}
{{ end }}
  listeners:
    443: { instancePort: 443 }

# Configure fast-recovery health-checks
loadBalancerHealthChecks/api.{{ ClusterName }}:
  loadBalancer: loadBalancer/api.{{ ClusterName }}
  target: "TCP:443"
  timeout: 5
  interval: 10
  healthyThreshold: 2
  unhealthyThreshold: 3

# Security group for master ELB
securityGroup/api.{{ ClusterName }}:
  vpc: vpc/{{ ClusterName }}
  description: 'Security group for ELB in front of masters'

# Allow full egress
securityGroupRule/egress-api-lb:
  securityGroup: securityGroup/api.{{ .ClusterName}
  egress: true
  cidr: 0.0.0.0/0

# HTTPS to the master ELB is allowed (for API access)
# One security group rule is necessary per admin CIDR
{{ range $index, $cidr := AdminCIDR }}
securityGroupRule/https-external-to-api-{{ $index }}:
  securityGroup: securityGroup/api.{{ ClusterName }}
  cidr: {{ $cidr }}
  protocol: tcp
  fromPort: 443
  toPort: 443
{{ end }}

# Allow HTTPS to the master from the master ELB
securityGroupRule/https-elb-to-master:
  securityGroup: securityGroup/masters.{{ ClusterName }}
  sourceGroup: securityGroup/api.{{ ClusterName }}
  protocol: tcp
  fromPort: 443
  toPort: 443


# Master name -> ELB
dnsName/{{ .MasterPublicName }}:
  Zone: dnsZone/{{ .DNSZone }}
  ResourceType: "A"
  TargetLoadBalancer: loadBalancer/api.{{ ClusterName }}
